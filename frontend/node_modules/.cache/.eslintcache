[{"/Users/katerina/Downloads/project2/front/src/index.js":"1","/Users/katerina/Downloads/project2/front/src/App.js":"2","/Users/katerina/Downloads/project2/front/src/components/TopNavBar.jsx":"3","/Users/katerina/Downloads/project2/front/src/routes/AllRoute.jsx":"4","/Users/katerina/Downloads/project2/front/src/constants/RouteConstant.js":"5","/Users/katerina/Downloads/project2/front/src/components/Stations/Stations.jsx":"6","/Users/katerina/Downloads/project2/front/src/components/Home/Home.jsx":"7","/Users/katerina/Downloads/project2/front/src/components/Journeys/Journeys.jsx":"8","/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/index.js":"9","/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/App.js":"10","/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/routes/AllRoute.jsx":"11","/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/components/TopNavBar.jsx":"12","/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/constants/RouteConstant.js":"13","/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/components/Home/Home.jsx":"14","/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/components/Journeys/Journeys.jsx":"15","/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/components/Stations/Stations.jsx":"16"},{"size":428,"mtime":1685531900000,"results":"17","hashOfConfig":"18"},{"size":257,"mtime":1685476372000,"results":"19","hashOfConfig":"18"},{"size":984,"mtime":1685478388000,"results":"20","hashOfConfig":"18"},{"size":635,"mtime":1685476494000,"results":"21","hashOfConfig":"18"},{"size":261,"mtime":1685486434000,"results":"22","hashOfConfig":"18"},{"size":6835,"mtime":1685563486000,"results":"23","hashOfConfig":"18"},{"size":503,"mtime":1685531846000,"results":"24","hashOfConfig":"18"},{"size":4360,"mtime":1685563586000,"results":"25","hashOfConfig":"18"},{"size":428,"mtime":1685531900000,"results":"26","hashOfConfig":"27"},{"size":257,"mtime":1685476372000,"results":"28","hashOfConfig":"27"},{"size":635,"mtime":1685476494000,"results":"29","hashOfConfig":"27"},{"size":984,"mtime":1685478388000,"results":"30","hashOfConfig":"27"},{"size":261,"mtime":1685562497954,"results":"31","hashOfConfig":"27"},{"size":513,"mtime":1685562435060,"results":"32","hashOfConfig":"27"},{"size":4360,"mtime":1685563586000,"results":"33","hashOfConfig":"27"},{"size":6404,"mtime":1685562477742,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qvmmmr",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dxyg5j",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/katerina/Downloads/project2/front/src/index.js",[],[],"/Users/katerina/Downloads/project2/front/src/App.js",[],[],"/Users/katerina/Downloads/project2/front/src/components/TopNavBar.jsx",[],[],"/Users/katerina/Downloads/project2/front/src/routes/AllRoute.jsx",[],[],"/Users/katerina/Downloads/project2/front/src/constants/RouteConstant.js",[],[],"/Users/katerina/Downloads/project2/front/src/components/Stations/Stations.jsx",["86","87","88","89"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { API } from \"../../constants/RouteConstant\";\r\nimport { Table, Input, InputGroup, Pagination, Col } from \"rsuite\";\r\nimport SearchIcon from \"@rsuite/icons/Search\";\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\nconst Stations = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [sortColumn, setSortColumn] = React.useState();\r\n  const [sortType, setSortType] = React.useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [flag, setFlag] = useState(false);\r\n  const [limit, setLimit] = React.useState(10);\r\n  const [page, setPage] = React.useState(1);\r\n  const [count, setCount] = React.useState(0);\r\n\r\n  const handleChangeLimit = (dataKey) => {\r\n    setPage(1);\r\n    setLimit(dataKey);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (flag) getSortedStationData(sortColumn, sortType);\r\n  }, [page]);\r\n\r\n  const handleSortColumn = (sortColumn, sortType) => {\r\n    setSortColumn(sortColumn);\r\n    setSortType(sortType);\r\n    getSortedStationData(sortColumn, sortType);\r\n  };\r\n\r\n  //   const getStationData = async () => {\r\n  //     setLoading(true);\r\n  //     const res = await fetch(API.Stations)\r\n  //       .then((e) => e.json())\r\n  //       .then((e) => e)\r\n  //       .catch((err) => {\r\n  //         console.log(err);\r\n  //       })\r\n  //       .finally(() => {\r\n  //         setLoading(false);\r\n  //       });\r\n  //     setFlag(true);\r\n  //     setCount(res.length);\r\n  //     setData(res);\r\n  //   };\r\n\r\n  const getStationDataByFID = async (id) => {\r\n    setLoading(true);\r\n    const res = await fetch(`${API.Stations}/${id}`)\r\n      .then((e) => e.json())\r\n      .then((e) => e)\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    setCount(res.length);\r\n    setData(res);\r\n  };\r\n\r\n  const getSortedStationData = async (sortColumn, sortType) => {\r\n    setLoading(true);\r\n    const data = {\r\n      limit: limit,\r\n      sort: sortColumn,\r\n      sortOrder: sortType === \"asc\" ? 1 : -1,\r\n      skip: (page - 1) * limit,\r\n    };\r\n    const res = await fetch(API.Stations, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((e) => e.json())\r\n      .then((e) => e)\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n    setFlag(true);\r\n    setCount(res.count);\r\n    setData(res.stations);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSortedStationData(sortColumn, sortType);\r\n  }, [limit]);\r\n\r\n  useEffect(() => {\r\n    if (search.length === 0 && flag) getSortedStationData(sortColumn, sortType);\r\n  }, [search]);\r\n\r\n  const searchHandler = () => {\r\n    getStationDataByFID(parseInt(search));\r\n  };\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\"10\");\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n    setPage(1);\r\n    setLimit(parseInt(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex\">\r\n        <Col xs={24} sm={12} md={8}>\r\n          <InputGroup>\r\n            <Input\r\n              placeholder=\"Search station by FID\"\r\n              value={search}\r\n              onChange={(value) => {\r\n                setSearch(value);\r\n              }}\r\n            />\r\n            <InputGroup.Addon className=\"s-style\" onClick={searchHandler}>\r\n              <SearchIcon />\r\n            </InputGroup.Addon>\r\n          </InputGroup>\r\n        </Col>\r\n      </div>\r\n      <Table\r\n        height={420}\r\n        data={data}\r\n        sortColumn={sortColumn}\r\n        sortType={sortType}\r\n        onSortColumn={handleSortColumn}\r\n        loading={loading}\r\n        virtualized\r\n      >\r\n        <Column width={70} align=\"center\" fixed sortable>\r\n          <HeaderCell>FId</HeaderCell>\r\n          <Cell dataKey=\"fid\" />\r\n        </Column>\r\n        <Column width={70} align=\"center\" fixed sortable>\r\n          <HeaderCell>Id</HeaderCell>\r\n          <Cell dataKey=\"id\" />\r\n        </Column>\r\n\r\n        <Column width={130} sortable>\r\n          <HeaderCell>Nimi</HeaderCell>\r\n          <Cell dataKey=\"nimi\" />\r\n        </Column>\r\n\r\n        <Column width={130} sortable>\r\n          <HeaderCell>Namn</HeaderCell>\r\n          <Cell dataKey=\"namn\" />\r\n        </Column>\r\n        <Column width={130} sortable>\r\n          <HeaderCell>Name</HeaderCell>\r\n          <Cell dataKey=\"name\" />\r\n        </Column>\r\n\r\n        <Column width={100} sortable>\r\n          <HeaderCell>Osoite</HeaderCell>\r\n          <Cell dataKey=\"osoite\" />\r\n        </Column>\r\n\r\n        <Column width={100} sortable>\r\n          <HeaderCell>Adress</HeaderCell>\r\n          <Cell dataKey=\"adress\" />\r\n        </Column>\r\n        <Column width={100} sortable>\r\n          <HeaderCell>Kaupunki</HeaderCell>\r\n          <Cell dataKey=\"kaupunki\" />\r\n        </Column>\r\n        <Column width={100} sortable>\r\n          <HeaderCell>Stad</HeaderCell>\r\n          <Cell dataKey=\"stad\" />\r\n        </Column>\r\n        <Column width={100} sortable>\r\n          <HeaderCell>Operaattor</HeaderCell>\r\n          <Cell dataKey=\"operaattor\" />\r\n        </Column>\r\n        <Column width={100} sortable>\r\n          <HeaderCell>Kapasiteet</HeaderCell>\r\n          <Cell dataKey=\"kapasiteet\" />\r\n        </Column>\r\n        <Column width={100} sortable>\r\n          <HeaderCell>X</HeaderCell>\r\n          <Cell dataKey=\"x\" />\r\n        </Column>\r\n        <Column width={100} sortable>\r\n          <HeaderCell>Y</HeaderCell>\r\n          <Cell dataKey=\"y\" />\r\n        </Column>\r\n        <Column width={100} sortable>\r\n          <HeaderCell>Journeys Start</HeaderCell>\r\n          <Cell dataKey=\"total_journeys_starting\" />\r\n        </Column>\r\n\r\n        <Column width={100} sortable>\r\n          <HeaderCell>Journeys Ending</HeaderCell>\r\n          <Cell dataKey=\"total_journeys_ending\" />\r\n        </Column>\r\n      </Table>\r\n      <div style={{ padding: 20 }}>\r\n        <Pagination\r\n          prev\r\n          next\r\n          first\r\n          last\r\n          ellipsis\r\n          boundaryLinks\r\n          maxButtons={5}\r\n          size=\"xs\"\r\n          layout={[\"total\", \"|\", \"pager\", \"skip\"]}\r\n          total={count}\r\n          limitOptions={[10, 30, 50]}\r\n          limit={parseInt(selectedOption)}\r\n          activePage={page}\r\n          onChangePage={setPage}\r\n          // onChangeLimit={handleChangeLimit}\r\n        />\r\n      </div>\r\n      <div className=\"pagi\">\r\n        <select value={selectedOption} onChange={handleChange}>\r\n          <option value=\"10\">10</option>\r\n          <option value=\"30\">30</option>\r\n          <option value=\"50\">50</option>\r\n          <option value=\"100\">100</option>\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stations;\r\n","/Users/katerina/Downloads/project2/front/src/components/Home/Home.jsx",["90"],[],"/Users/katerina/Downloads/project2/front/src/components/Journeys/Journeys.jsx",["91","92","93"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { API } from \"../../constants/RouteConstant\";\r\nimport { Table, Pagination } from \"rsuite\";\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\nconst Journeys = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [sortColumn, setSortColumn] = React.useState();\r\n  const [sortType, setSortType] = React.useState();\r\n  const [flag, setFlag] = useState(false);\r\n  const [limit, setLimit] = React.useState(10);\r\n  const [page, setPage] = React.useState(1);\r\n  const [count, setCount] = React.useState(0);\r\n\r\n  const handleChangeLimit = (dataKey) => {\r\n    setPage(1);\r\n    setLimit(dataKey);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(flag)\r\n        getSortedJourneyData(sortColumn,sortType);\r\n  }, [page]);\r\n\r\n  const handleSortColumn = (sortColumn, sortType) => {\r\n    setSortColumn(sortColumn);\r\n    setSortType(sortType);\r\n    getSortedJourneyData(sortColumn, sortType);\r\n  };\r\n\r\n  const getSortedJourneyData = async (sortColumn, sortType) => {\r\n    setLoading(true);\r\n    const data = {\r\n      limit: limit,\r\n      sort: sortColumn,\r\n      sortOrder: sortType === \"asc\" ? 1 : -1,\r\n      skip: (page - 1)*limit\r\n    };\r\n    const res = await fetch(`${API.Journey}/list`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((e) => e.json())\r\n      .then((e) => e)\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n      setFlag(true);\r\n      setCount(res.count);\r\n    setData(res.journey);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSortedJourneyData(sortColumn,sortType);\r\n  }, [limit]);\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\"10\");\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n    setPage(1);\r\n    setLimit(parseInt(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        height={420}\r\n        data={data}\r\n        sortColumn={sortColumn}\r\n        sortType={sortType}\r\n        onSortColumn={handleSortColumn}\r\n        loading={loading}\r\n        virtualized\r\n      >\r\n        <Column width={170} align=\"center\" sortable>\r\n          <HeaderCell>Departure</HeaderCell>\r\n          <Cell dataKey=\"Departure\" />\r\n        </Column>\r\n        <Column width={170} align=\"center\" sortable>\r\n          <HeaderCell>Return</HeaderCell>\r\n          <Cell dataKey=\"Return\" />\r\n        </Column>\r\n\r\n        <Column width={150} sortable>\r\n          <HeaderCell>Departure Station Id</HeaderCell>\r\n          <Cell dataKey=\"Departure_station_id\" />\r\n        </Column>\r\n\r\n        <Column width={170} sortable>\r\n          <HeaderCell>Departure Station Name</HeaderCell>\r\n          <Cell dataKey=\"Departure_station_name\" />\r\n        </Column>\r\n        <Column width={150} sortable>\r\n          <HeaderCell>Return Station Id</HeaderCell>\r\n          <Cell dataKey=\"Return_station_id\" />\r\n        </Column>\r\n\r\n        <Column width={170} sortable>\r\n          <HeaderCell>Return Station Name</HeaderCell>\r\n          <Cell dataKey=\"Return_station_name\" />\r\n        </Column>\r\n\r\n        <Column width={150} sortable>\r\n          <HeaderCell>Covered Distance</HeaderCell>\r\n          <Cell dataKey=\"Covered_distance\" />\r\n        </Column>\r\n        <Column width={100} sortable>\r\n          <HeaderCell>Duration</HeaderCell>\r\n          <Cell dataKey=\"Duration\" />\r\n        </Column>\r\n      </Table>\r\n      <div style={{ padding: 20 }}>\r\n        <Pagination\r\n          prev\r\n          next\r\n          first\r\n          last\r\n          ellipsis\r\n          boundaryLinks\r\n          maxButtons={5}\r\n          size=\"xs\"\r\n          layout={[\"total\", \"|\", \"pager\", \"skip\"]}\r\n          total={count}\r\n          limitOptions={[10, 30, 50]}\r\n          limit={limit}\r\n          activePage={page}\r\n          onChangePage={setPage}\r\n          // onChangeLimit={handleChangeLimit}\r\n        />\r\n      </div>\r\n      <div className=\"pagi\">\r\n        <select value={selectedOption} onChange={handleChange}>\r\n          <option value=\"10\">10</option>\r\n          <option value=\"30\">30</option>\r\n          <option value=\"50\">50</option>\r\n          <option value=\"100\">100</option>\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Journeys","/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/index.js",[],[],"/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/App.js",[],[],"/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/routes/AllRoute.jsx",[],[],"/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/components/TopNavBar.jsx",[],[],"/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/constants/RouteConstant.js",[],[],"/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/components/Home/Home.jsx",["94"],[],"/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/components/Journeys/Journeys.jsx",["95","96","97"],[],[],"/Users/katerina/helsinkibike-app/helsinkibike-app-/frontend/src/components/Stations/Stations.jsx",["98","99","100","101"],[],{"ruleId":"102","severity":1,"message":"103","line":19,"column":9,"nodeType":"104","messageId":"105","endLine":19,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":26,"column":6,"nodeType":"108","endLine":26,"endColumn":12,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":95,"column":6,"nodeType":"108","endLine":95,"endColumn":13,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"107","line":99,"column":6,"nodeType":"108","endLine":99,"endColumn":14,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":9,"column":9,"nodeType":"115","endLine":9,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":17,"column":9,"nodeType":"104","messageId":"105","endLine":17,"endColumn":26},{"ruleId":"106","severity":1,"message":"116","line":25,"column":6,"nodeType":"108","endLine":25,"endColumn":12,"suggestions":"117"},{"ruleId":"106","severity":1,"message":"118","line":63,"column":6,"nodeType":"108","endLine":63,"endColumn":13,"suggestions":"119"},{"ruleId":"113","severity":1,"message":"114","line":9,"column":9,"nodeType":"115","endLine":9,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":17,"column":9,"nodeType":"104","messageId":"105","endLine":17,"endColumn":26},{"ruleId":"106","severity":1,"message":"116","line":25,"column":6,"nodeType":"108","endLine":25,"endColumn":12,"suggestions":"120"},{"ruleId":"106","severity":1,"message":"118","line":63,"column":6,"nodeType":"108","endLine":63,"endColumn":13,"suggestions":"121"},{"ruleId":"102","severity":1,"message":"103","line":19,"column":9,"nodeType":"104","messageId":"105","endLine":19,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":26,"column":6,"nodeType":"108","endLine":26,"endColumn":12,"suggestions":"122"},{"ruleId":"106","severity":1,"message":"110","line":80,"column":6,"nodeType":"108","endLine":80,"endColumn":13,"suggestions":"123"},{"ruleId":"106","severity":1,"message":"107","line":84,"column":6,"nodeType":"108","endLine":84,"endColumn":14,"suggestions":"124"},"no-unused-vars","'handleChangeLimit' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'flag', 'getSortedStationData', 'sortColumn', and 'sortType'. Either include them or remove the dependency array.","ArrayExpression",["125"],"React Hook useEffect has missing dependencies: 'getSortedStationData', 'sortColumn', and 'sortType'. Either include them or remove the dependency array.",["126"],["127"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'flag', 'getSortedJourneyData', 'sortColumn', and 'sortType'. Either include them or remove the dependency array.",["128"],"React Hook useEffect has missing dependencies: 'getSortedJourneyData', 'sortColumn', and 'sortType'. Either include them or remove the dependency array.",["129"],["130"],["131"],["132"],["133"],["134"],{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"141","fix":"145"},{"desc":"143","fix":"146"},{"desc":"135","fix":"147"},{"desc":"137","fix":"148"},{"desc":"139","fix":"149"},"Update the dependencies array to be: [flag, getSortedStationData, page, sortColumn, sortType]",{"range":"150","text":"151"},"Update the dependencies array to be: [getSortedStationData, limit, sortColumn, sortType]",{"range":"152","text":"153"},"Update the dependencies array to be: [flag, getSortedStationData, search, sortColumn, sortType]",{"range":"154","text":"155"},"Update the dependencies array to be: [flag, getSortedJourneyData, page, sortColumn, sortType]",{"range":"156","text":"157"},"Update the dependencies array to be: [getSortedJourneyData, limit, sortColumn, sortType]",{"range":"158","text":"159"},{"range":"160","text":"157"},{"range":"161","text":"159"},{"range":"162","text":"151"},{"range":"163","text":"153"},{"range":"164","text":"155"},[918,924],"[flag, getSortedStationData, page, sortColumn, sortType]",[2654,2661],"[getSortedStationData, limit, sortColumn, sortType]",[2775,2783],"[flag, getSortedStationData, search, sortColumn, sortType]",[808,814],"[flag, getSortedJourneyData, page, sortColumn, sortType]",[1763,1770],"[getSortedJourneyData, limit, sortColumn, sortType]",[808,814],[1763,1770],[918,924],[2223,2230],[2344,2352]]